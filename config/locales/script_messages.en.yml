en:
  script_messages:
    # unzip and prepare
    zip_archive_without_gdb: "%{timestamp}: Archive doesn't contain geodatabase"
    file_received_and_unpacking: "%{timestamp}: File %{file} has been received and is unpacking now"
    gdb_unpacked: "%{timestamp}: Geodatabase %{gdb} is unpacked and is being analysed now"
    class_set_found:
      one: "%{timestamp}: Feature dataset %{class_set} found, it has %{count} feature class"
      other: "%{timestamp}: Feature dataset %{class_set} found, it has %{count} feature classes"
    error_class_removing: "%{timestamp}: Error deleting feature class %{class}"
    error_class_set_removing: "%{timestamp}: Error deleting feature dataset %{class_set}"
    gdb_has_no_class_sets: "%{timestamp}: Geodatabase doesn't contain any feature dataset"
    error_gdb_removing: "%{timestamp}: Error deleting geodatabase %{gdb}"
    # validate and zip
    uses_gdb: "%{timestamp}: Using geodatabase %{gdb}"
    n_rules_will_add:
      one: "%{timestamp}: %{count} geometric correctness rule will be added"
      other: "%{timestamp}: %{count} geometric correctness rules will be added"
    class_set: "%{timestamp}: Feature dataset %{class_set}"
    rule_will_be_add_for_classes: "%{timestamp}: Rule %{rule} for feature classes %{class1} and %{class2} will be added"
    rule_will_be_add_for_class: "%{timestamp}: Rule %{rule} for feature class %{class} will be added"
    cluster_tolerance_value: "%{timestamp}: Coordinates comparing sensitivity is %{cluster_tolerance}"
    cluster_tolerance_default: "%{timestamp}: Coordinates comparing sensitivity has a default value"
    topology_is_validating: "%{timestamp}: Topology %{topology} is being validated"
    topology_validated: "%{timestamp}: Topology %{topology} validation is complete"
    topology_validating_results_exporting: "%{timestamp}: Topology %{topology} validation results are being exported"
    topology_validating_results_exported: "%{timestamp}: Topology %{topology} validation results export is complete"
    cannot_export_topology_validating_results: "%{timestamp}: Can't export topology %{topology} validating results"
    class_added: "%{timestamp}: Feature class %{class} added"
    class_is_already_exists: "%{timestamp}: Feature class %{class} already exists in topology"
    topology_created: "%{timestamp}: Topology %{topology} created"
    class_set_already_has_topology: "%{timestamp}: Feature dataset %{class_set} already has topology"
    rule_added_for_classes: "%{timestamp}: Added rule %{rule} for feature classes %{class1} and %{class2} in feature dataset %{class_set}"
    cannot_add_rule_for_classes: "%{timestamp}: Can't add rule %{rule} for feature classes %{class1} and %{class2} in feature dataset %{class_set}"
    rule_added_for_class: "%{timestamp}: Added rule %{rule} for feature class %{class} in feature dataset %{class_set}"
    cannot_add_rule_for_class: "%{timestamp}: Can't add rule %{rule} for feature class %{class} in feature dataset %{class_set}"
    n_topologies_will_validate_and_export:
      one: "%{timestamp}: %{count} topology will be validated and results will be exported"
      other: "%{timestamp}: %{count} topologies will be validated and results will be exported"
    creating_results_gdb: "%{timestamp}: Geodatabase for export results is creating"
    results_gdb_created: "%{timestamp}: Geodatabase for export results created"
    class_set_already_exists_in_results_gdb: "%{timestamp}: Feature dataset %{class_set} is already exists in export geodatabase"
    exporting_validating_results: "%{timestamp}: Topology %{topology} validating results are copying to export geodatabase"
    validating_results_exported: "%{timestamp}: Topology %{topology} validating results copied to export geodatabase"
    packing_validating_results: "%{timestamp}: Results geodatabase is packing"
    validating_results_packed_to: "%{timestamp}: Results geodatabase packed to file %{file}"
    cannot_remove_temp_results_gdb: "%{timestamp}: Can't remove temporary results geodatabase %{gdb}"
    no_results: "%{timestamp}: Results for exporting are not exist"
    cannot_remove_temp_gdb: "%{timestamp}: Can't remove temporary geodatabase %{gdb}"
